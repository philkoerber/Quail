services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: quail_db
      POSTGRES_USER: quail_user
      POSTGRES_PASSWORD: quail_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d
    networks:
      - quail_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quail_user -d quail_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # NestJS API - Development with hot reload
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://quail_user:quail_password@postgres:5432/quail_db
      JWT_SECRET: dev-jwt-secret-key
      JWT_REFRESH_SECRET: dev-refresh-secret-key
      NODE_ENV: development
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quail_network
    restart: unless-stopped
    command: npm run start:dev

  # Angular Frontend - Development with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - quail_network
    command: npm start -- --host 0.0.0.0 --poll 2000

  # LEAN CLI for backtest execution - Development
  lean-cli:
    build:
      context: ./lean-cli
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "8000:8000"
    volumes:
      - ./lean-cli:/app
      - lean_cli_data:/app/data
      - lean_cli_results:/app/results
      - lean_cli_strategies:/app/strategies
    environment:
      LEAN_DATA_DIR: /app/data
      LEAN_RESULTS_DIR: /app/results
      LEAN_STRATEGIES_DIR: /app/strategies
    networks:
      - quail_network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Ollama for LLM management
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - quail_network

volumes:
  postgres_data:
  ollama_data:
  lean_cli_data:
  lean_cli_results:
  lean_cli_strategies:

networks:
  quail_network:
    driver: bridge 